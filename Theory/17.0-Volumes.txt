Volumes:
	- When a POD is created to process data and then deleted, the data processed by it gets deleted as well. 
		=> For this we attach a volume to the POD. The data generated by the POD is now stored in the volume, and even after the POD is delete, the data remains.

	- Volume Storage types: hostPath, NFS, glusterFS, Flocker, FibreChannel, CephFS, ScaleIO. Public cloud solutions: AWS EBS, Azure Disk or File or Googleâ€™s Persistent Disk.


	- Volume Storage type - hostPath: configure a directory on the host as storage space for the volume
		=> This is not recommended for use in a multi-node cluster. This is because the PODs would use the /data directory on all the nodes, and expect all of them to be the same and have the same data => Since they are on different servers, they are in fact not the same.

		ex: mount "/data" on local node to "/opt" inside pod's container

			apiVersion: v1
			kind: Pod
			metadata:
			  name: myapp-pod
			  labels:
			    app: myapp
			    type: mypod-type

			spec:
			  containers:
			  - name: mypod-container
			    image: xxx
			    volumeMounts:
			    - mountPath: /opt
			      name: data-volume

			  volumes:
			  - name: data-volume
			    hostPath:
			      path: /data
			      type: Directory

	- Volume Storage type - AWS Elastic Block Store
		ex:
			volumes:
			  - name: data-volume
			    awsElasticBlockStore:
			      volumeID: <volume-id>
			      fsType: ext4

			  





